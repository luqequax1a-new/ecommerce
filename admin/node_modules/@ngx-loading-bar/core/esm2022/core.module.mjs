import { ChangeDetectionStrategy, Component, NgModule, ViewEncapsulation } from '@angular/core';
import { CommonModule } from '@angular/common';
import { NgxLoadingBar } from './loading-bar.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class LoadingBarComponent extends NgxLoadingBar {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: LoadingBarComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: LoadingBarComponent, selector: "ngx-loading-bar", host: { properties: { "attr.fixed": "fixed", "style.color": "color" } }, usesInheritance: true, ngImport: i0, template: "<ng-container *ngIf=\"value != null ? value : (value$ | async) as progress\">\n  <div *ngIf=\"includeSpinner\" class=\"ngx-spinner\">\n    <div [style.width]=\"diameter\" [style.height]=\"diameter\" class=\"ngx-spinner-icon\"></div>\n  </div>\n  <div\n    *ngIf=\"includeBar\"\n    class=\"ngx-bar\"\n    [style.background]=\"color\"\n    [style.height]=\"height\"\n    [style.width]=\"progress + '%'\"\n  ></div>\n</ng-container>\n", styles: [":host{position:relative;display:block;pointer-events:none}:host .ngx-spinner{transition:.35s linear all;display:block;position:absolute;top:5px;left:0}:host .ngx-spinner .ngx-spinner-icon{width:14px;height:14px;border:solid 2px transparent;border-top-color:inherit;border-left-color:inherit;border-radius:50%;animation:loading-bar-spinner .4s linear infinite}:host .ngx-bar{transition:width .35s;position:absolute;top:0;left:0;width:100%;height:2px;border-bottom-right-radius:1px;border-top-right-radius:1px}[dir=rtl] :host .ngx-bar{right:0;left:unset}:host[fixed=true]{z-index:10002}:host[fixed=true] .ngx-bar{position:fixed}:host[fixed=true] .ngx-spinner{position:fixed;top:10px;left:10px}[dir=rtl] :host[fixed=true] .ngx-spinner{right:10px;left:unset}@keyframes loading-bar-spinner{0%{transform:rotate(0)}to{transform:rotate(360deg)}}\n"], dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "pipe", type: i1.AsyncPipe, name: "async" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: LoadingBarComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ngx-loading-bar', preserveWhitespaces: false, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.Emulated, host: {
                        '[attr.fixed]': 'fixed',
                        '[style.color]': 'color',
                    }, template: "<ng-container *ngIf=\"value != null ? value : (value$ | async) as progress\">\n  <div *ngIf=\"includeSpinner\" class=\"ngx-spinner\">\n    <div [style.width]=\"diameter\" [style.height]=\"diameter\" class=\"ngx-spinner-icon\"></div>\n  </div>\n  <div\n    *ngIf=\"includeBar\"\n    class=\"ngx-bar\"\n    [style.background]=\"color\"\n    [style.height]=\"height\"\n    [style.width]=\"progress + '%'\"\n  ></div>\n</ng-container>\n", styles: [":host{position:relative;display:block;pointer-events:none}:host .ngx-spinner{transition:.35s linear all;display:block;position:absolute;top:5px;left:0}:host .ngx-spinner .ngx-spinner-icon{width:14px;height:14px;border:solid 2px transparent;border-top-color:inherit;border-left-color:inherit;border-radius:50%;animation:loading-bar-spinner .4s linear infinite}:host .ngx-bar{transition:width .35s;position:absolute;top:0;left:0;width:100%;height:2px;border-bottom-right-radius:1px;border-top-right-radius:1px}[dir=rtl] :host .ngx-bar{right:0;left:unset}:host[fixed=true]{z-index:10002}:host[fixed=true] .ngx-bar{position:fixed}:host[fixed=true] .ngx-spinner{position:fixed;top:10px;left:10px}[dir=rtl] :host[fixed=true] .ngx-spinner{right:10px;left:unset}@keyframes loading-bar-spinner{0%{transform:rotate(0)}to{transform:rotate(360deg)}}\n"] }]
        }] });
export class LoadingBarModule {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: LoadingBarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: LoadingBarModule, declarations: [LoadingBarComponent], imports: [CommonModule], exports: [LoadingBarComponent] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: LoadingBarModule, imports: [CommonModule] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: LoadingBarModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule],
                    declarations: [LoadingBarComponent],
                    exports: [LoadingBarComponent],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29yZS5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wYWNrYWdlcy9jb3JlL3NyYy9jb3JlLm1vZHVsZS50cyIsIi4uLy4uLy4uLy4uL3BhY2thZ2VzL2NvcmUvc3JjL2xvYWRpbmctYmFyLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2hHLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0seUJBQXlCLENBQUM7OztBQWN4RCxNQUFNLE9BQU8sbUJBQW9CLFNBQVEsYUFBYTsrR0FBekMsbUJBQW1CO21HQUFuQixtQkFBbUIsdUpDaEJoQyxrYkFZQTs7NEZESWEsbUJBQW1CO2tCQVovQixTQUFTOytCQUNFLGlCQUFpQix1QkFDTixLQUFLLG1CQUNULHVCQUF1QixDQUFDLE1BQU0saUJBQ2hDLGlCQUFpQixDQUFDLFFBQVEsUUFHbkM7d0JBQ0osY0FBYyxFQUFFLE9BQU87d0JBQ3ZCLGVBQWUsRUFBRSxPQUFPO3FCQUN6Qjs7QUFTSCxNQUFNLE9BQU8sZ0JBQWdCOytHQUFoQixnQkFBZ0I7Z0hBQWhCLGdCQUFnQixpQkFQaEIsbUJBQW1CLGFBR3BCLFlBQVksYUFIWCxtQkFBbUI7Z0hBT25CLGdCQUFnQixZQUpqQixZQUFZOzs0RkFJWCxnQkFBZ0I7a0JBTDVCLFFBQVE7bUJBQUM7b0JBQ1IsT0FBTyxFQUFFLENBQUMsWUFBWSxDQUFDO29CQUN2QixZQUFZLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQztvQkFDbkMsT0FBTyxFQUFFLENBQUMsbUJBQW1CLENBQUM7aUJBQy9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgTmdNb2R1bGUsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmd4TG9hZGluZ0JhciB9IGZyb20gJy4vbG9hZGluZy1iYXIuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbmd4LWxvYWRpbmctYmFyJyxcbiAgcHJlc2VydmVXaGl0ZXNwYWNlczogZmFsc2UsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5FbXVsYXRlZCxcbiAgc3R5bGVVcmxzOiBbJy4vbG9hZGluZy1iYXIuY29tcG9uZW50LnNjc3MnXSxcbiAgdGVtcGxhdGVVcmw6ICcuL2xvYWRpbmctYmFyLmNvbXBvbmVudC5odG1sJyxcbiAgaG9zdDoge1xuICAgICdbYXR0ci5maXhlZF0nOiAnZml4ZWQnLFxuICAgICdbc3R5bGUuY29sb3JdJzogJ2NvbG9yJyxcbiAgfSxcbn0pXG5leHBvcnQgY2xhc3MgTG9hZGluZ0JhckNvbXBvbmVudCBleHRlbmRzIE5neExvYWRpbmdCYXIge31cblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW0NvbW1vbk1vZHVsZV0sXG4gIGRlY2xhcmF0aW9uczogW0xvYWRpbmdCYXJDb21wb25lbnRdLFxuICBleHBvcnRzOiBbTG9hZGluZ0JhckNvbXBvbmVudF0sXG59KVxuZXhwb3J0IGNsYXNzIExvYWRpbmdCYXJNb2R1bGUge31cbiIsIjxuZy1jb250YWluZXIgKm5nSWY9XCJ2YWx1ZSAhPSBudWxsID8gdmFsdWUgOiAodmFsdWUkIHwgYXN5bmMpIGFzIHByb2dyZXNzXCI+XG4gIDxkaXYgKm5nSWY9XCJpbmNsdWRlU3Bpbm5lclwiIGNsYXNzPVwibmd4LXNwaW5uZXJcIj5cbiAgICA8ZGl2IFtzdHlsZS53aWR0aF09XCJkaWFtZXRlclwiIFtzdHlsZS5oZWlnaHRdPVwiZGlhbWV0ZXJcIiBjbGFzcz1cIm5neC1zcGlubmVyLWljb25cIj48L2Rpdj5cbiAgPC9kaXY+XG4gIDxkaXZcbiAgICAqbmdJZj1cImluY2x1ZGVCYXJcIlxuICAgIGNsYXNzPVwibmd4LWJhclwiXG4gICAgW3N0eWxlLmJhY2tncm91bmRdPVwiY29sb3JcIlxuICAgIFtzdHlsZS5oZWlnaHRdPVwiaGVpZ2h0XCJcbiAgICBbc3R5bGUud2lkdGhdPVwicHJvZ3Jlc3MgKyAnJSdcIlxuICA+PC9kaXY+XG48L25nLWNvbnRhaW5lcj5cbiJdfQ==